plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.sixplus.server'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.google.code.gson:gson:2.11.0'
//	implementation 'org.flywaydb:flyway-core'
//	implementation 'org.flywaydb:flyway-mysql'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'javax.servlet:javax.servlet-api:4.0.0'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'com.sun.mail:javax.mail:1.6.2'
	implementation 'org.modelmapper:modelmapper:3.1.1'

	implementation 'io.github.openfeign:feign-okhttp:13.0'
	implementation "org.springframework.cloud:spring-cloud-starter-openfeign:4.0.0"
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'io.projectreactor:reactor-core:3.4.22'
	
	implementation 'org.springframework.boot:spring-boot-starter-web' 
	// implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Spring Boot JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'javax.persistence:javax.persistence-api:2.2'
	implementation 'com.h2database:h2:1.4.200'
	implementation 'org.postgresql:postgresql:42.7.4'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'com.jayway.jsonpath:json-path:2.6.0'
	implementation 'org.springframework.kafka:spring-kafka'

}

tasks.named('test') {
	useJUnitPlatform()
}

def defaultEncoding = 'UTF-8'
tasks.withType(JavaCompile) {
	options.encoding = defaultEncoding
}